casper.test.begin("Twitter Search Feed large input test", function suite(test) {
  casper.open("http://localhost/~dave/twittersearchfeed/", function() {
    casper.evaluate(function() {localStorage.removeItem('searchQuery');});
  });
  casper.waitForSelector("form input#query",
    function success() {
        test.assertExists("form input#query");
        this.click("form input#query");
    },
    function fail() {
        test.assertExists("form input#query");
});
casper.waitForSelector("input#query",
    function success() {
        this.sendKeys("input#query
    },
    function fail() {
        test.assertExists("input#query");
});
casper.waitForSelector("form input[type=button][value='Get Tweets']",
    function success() {
        test.assertExists("form input[type=button][value='Get Tweets']");
        var queryLength = casper.evaluate(function() {return $("#query").val().length});
        test.assert(queryLength === 1000, "Text input truncated at 1000 characters"); //
        this.click("form input[type=button][value='Get Tweets']");
    },
    function fail() {
        test.assertExists("form input[type=button][value='Get Tweets']");
});
casper.waitForSelector("input[type=button][value='Refresh']",
    function success() {
        test.assertExists("input[type=button][value='Refresh']");
        this.click("input[type=button][value='Refresh']");
    },
    function fail() {
      this.capture('formRefreshFail.png');
        test.assertExists("input[type=button][value='Refresh']");
});
casper.run(function() {casper.test.renderResults(true); casper.test.done();});

casper.test.done();
});

//casper.run(function() {casper.test.renderResults(true); casper.test.done();});
